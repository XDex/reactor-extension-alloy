{
  "displayName": "AEP Web SDK",
  "name": "adobe-alloy",
  "iconPath": "resources/images/icon.svg",
  "platform": "web",
  "version": "2.0.0",
  "description": "The Adobe Experience Platform Web SDK allows for streaming data into the platform, syncing identities, personalizing content, and more.",
  "author": {
    "name": "Adobe"
  },
  "viewBasePath": "dist/view/",
  "configuration": {
    "viewPath": "configuration/configuration.html",
    "schema": {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "type": "object",
      "properties": {
        "instances": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "pattern": "\\D+"
              },
              "edgeConfigId": {
                "type": "string",
                "minLength": 1
              },
              "stagingEdgeConfigId": {
                "type": "string",
                "minLength": 1
              },
              "developmentEdgeConfigId": {
                "type": "string",
                "minLength": 1
              },
              "orgId": {
                "type": "string",
                "minLength": 1
              },
              "edgeDomain": {
                "type": "string",
                "minLength": 1
              },
              "edgeBasePath": {
                "type": "string",
                "minLength": 1
              },
              "defaultConsent": {
                "type": "string",
                "enum": ["in", "pending"]
              },
              "idMigrationEnabled": {
                "type": "boolean"
              },
              "thirdPartyCookiesEnabled": {
                "type": "boolean"
              },
              "prehidingStyle": {
                "type": "string",
                "minLength": 1
              },
              "clickCollectionEnabled": {
                "type": "boolean"
              },
              "showAdvancedSettings": {
                "type": "boolean"
              },
              "downloadLinkQualifier": {
                "type": "string",
                "minLength": 1
              },
              "context": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": ["web", "device", "environment", "placeContext"]
                }
              },
              "onBeforeEventSend": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": ["edgeConfigId", "name"],
            "additionalProperties": false
          }
        }
      },
      "required": ["instances"],
      "additionalProperties": false
    },
    "transforms": [
      {
        "type": "function",
        "propertyPath": "instances[].onBeforeEventSend",
        "parameters": ["content"]
      },
      {
        "type": "remove",
        "propertyPath": "instances[].edgeConfigInputMethod"
      }
    ]
  },
  "actions": [
    {
      "displayName": "Reset Event Merge ID",
      "name": "reset-event-merge-id",
      "schema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "properties": {
          "eventMergeId": {
            "type": "string",
            "pattern": "^%[^%]+%$"
          }
        },
        "required": ["eventMergeId"],
        "additionalProperties": false
      },
      "libPath": "dist/lib/actions/resetEventMergeId/index.js",
      "viewPath": "actions/resetEventMergeId.html"
    },
    {
      "displayName": "Send Event",
      "name": "send-event",
      "schema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "properties": {
          "instanceName": {
            "type": "string",
            "minLength": 1
          },
          "renderDecisions": {
            "type": "boolean",
            "minLength": 1
          },
          "decisionScopes": {
            "anyOf": [
              { "type": "array" },
              { "type": "string", "pattern": "^%[^%]+%$" }
            ]
          },
          "xdm": {
            "type": "string",
            "pattern": "^%[^%]+%$"
          },
          "type": {
            "type": "string",
            "minLength": 1
          },
          "mergeId": {
            "type": "string",
            "minLength": 1
          },
          "datasetId": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": ["instanceName"],
        "additionalProperties": false
      },
      "libPath": "dist/lib/actions/sendEvent/index.js",
      "viewPath": "actions/sendEvent.html"
    },
    {
      "displayName": "Set Consent",
      "name": "set-consent",
      "schema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "properties": {
          "instanceName": {
            "type": "string",
            "minLength": 1
          },
          "consent": {
            "anyOf": [
              {
                "type": "array",
                "minItems": 1,
                "maxItems": 1,
                "items": {
                  "type": "object",
                  "properties": {
                    "standard": {
                      "type": "string",
                      "enum": ["Adobe"]
                    },
                    "version": {
                      "type": "string",
                      "enum": ["1.0"]
                    },
                    "value": {
                      "type": "object",
                      "properties": {
                        "general": {
                          "type": "string",
                          "enum": ["in", "out"]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              {
                "type": "string",
                "pattern": "^%[^%]+%$"
              }
            ]
          }
        },
        "required": ["instanceName", "consent"],
        "additionalProperties": false
      },
      "libPath": "dist/lib/actions/setConsent/index.js",
      "viewPath": "actions/setConsent.html"
    }
  ],
  "events": [
    {
      "name": "decisions-received",
      "displayName": "Decisions Received",
      "libPath": "dist/lib/events/decisionsReceived/index.js",
      "schema": {}
    }
  ],
  "dataElements": [
    {
      "displayName": "Event Merge ID",
      "name": "event-merge-id",
      "schema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "properties": {
          "cacheId": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": ["cacheId"],
        "additionalProperties": false
      },
      "libPath": "dist/lib/dataElements/eventMergeId/index.js",
      "viewPath": "dataElements/eventMergeId.html"
    },
    {
      "displayName": "XDM Object",
      "name": "xdm-object",
      "schema": {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "type": "object",
        "properties": {
          "schema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "minLength": 1
              },
              "version": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": ["id", "version"],
            "additionalProperties": false
          },
          "data": {
            "type": "object"
          }
        },
        "required": ["schema", "data"],
        "additionalProperties": false
      },
      "transforms": [
        {
          "type": "remove",
          "propertyPath": "schema"
        }
      ],
      "libPath": "dist/lib/dataElements/xdmObject/index.js",
      "viewPath": "dataElements/xdmObject.html"
    }
  ],
  "main": "dist/lib/instanceManager/index.js"
}
